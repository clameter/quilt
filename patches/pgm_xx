Index: rdma-core/ib2roce/sender.c
===================================================================
--- rdma-core.orig/ib2roce/sender.c
+++ rdma-core/ib2roce/sender.c
@@ -64,17 +64,103 @@ struct sender_info {
 
 #define SENDER_SIGNATURE 0xD3ADB33F
 
+enum pgm_type { 
+	pgm_spm, pgm_poll, pgm_polr,
+	pgm_odata = 0x4, pgm_rdata,
+	pgm_nak = 0x8, pgm_nnak, pgm_ncf,
+	pgm_spmr = 0xc, pgm_ack,
+	pgm_max = 0xff
+};
+
+enum pgm_opt {
+	opt_length, opt_fragment, opt_nak_list, opt_join, opt_nak_bo_ivl, opt_nak_bo_rng,
+	opt_redirect = 0x7, opt_parity_prm, opt_parity_grp, opt_curr_tgsize, 
+	opt_nbr_unreach = 0xb, opt_path_nla,
+	opt_syn = 0xd, opt_fin, opt_rst,
+	opt_cr = 0x10, opt_crqst, opt_pgmcc_data, opt_pgmcc_feedback,
+	opt_invalid = 0x7f,
+	opt_parity = 0x80,
+	opt_var_pktlen = 0x40,
+	opt_network = 0x02,
+	opt_presnet = 0x01,
+};
+
+
+struct pgm_header {
+	uint16_t sport;
+	uint16_t dport;
+	uint8_t type;
+	uint8_t options;
+	uint16_t checksum;
+	struct in_addr source;
+	uint16_t gsilow;
+	uint16_t tsdu_length;
+};
+
+
+struct pgm_data {
+	uint32_t spn;
+	uint32_t trail;
+};
+
+struct pgm_opt {
+	uint8_t type;
+	uint8_t length;
+	union {
+		uint8_t reserved;
+		uint16_t total_length;
+	}
+};
+
+
+static void send_data(struct mc *, struct buf *buf, int resend)
+{
+}
+
+static void receive_data(struct mc *, struct buf *buf)
+{
+}
+
+static void send_ack(struct mc *i)
+{
+}
+
+static void send_nak(struct mc *i)
+{
+}
+
 static void prep_sender_struct(struct i2r_interface *i, struct buf *buf)
 {
-	struct sender_info *b = (void *)buf->raw;
+	struct pgm_header *b = (void *)buf->raw;
+	struct pgm_data *d = (void)buf->raw + sizeof(struct pgm_header);
+	struct pgm_opt = *o = (void)buf->raw + sizeof(struct pgm_header) + sizeof(struct pgm_data);
 
 	/* Max MTU is 4096 bytes */
 	if (sendlen > 4096)
 		abort();
 
-
 	memset(buf->raw, 0, sendlen);
 
+
+	b->sport =
+	b->dport =
+	b->type = pgm_odata;
+	b->options = 
+	b->checksum = 0;
+	b->source = i->if_addr;
+	b->gsilow = sport;
+	b->tdsu_length = ;
+
+	d->sqn = sender_seq;
+	d->trail = sender_seq;
+
+	o->type = opt_length | opt_end;
+	o->length = sizeof(struct pgm_data + sizeof(pgm_opt));
+
+
+
+
+
 	b->signature = SENDER_SIGNATURE;
 	memcpy(b->name, hostname, sizeof(hostname));
 	b->sessionid = sessionid;
