Index: rdma-core/ib2roce/channel.c
===================================================================
--- rdma-core.orig/ib2roce/channel.c
+++ rdma-core/ib2roce/channel.c
@@ -684,11 +684,32 @@ static void calculate_pps_channel(FILE *
 	c->last_snapshot = now;
 }
 
+static bool pps_display;
+
 static void calculate_pps(void *private)
 {
 	all_channels(NULL, calculate_pps_channel);
 	stat_start += seconds(stat_interval);
 	add_event(stat_start, calculate_pps, NULL, "pps calculation");
+
+	if (pps_display) {
+		int n = 0;
+		char buf[4000];
+
+ 		interface_foreach(i)
+			channel_foreach(c, &i->channels) {
+				if (c->pps_in || c->pps_out) {
+					n += sprintf(buf + n, "%s ", c->text);
+					if (c->pps_in)
+						n += sprintf(buf + n, "%s in ", print_count(c->pps_in));
+					if (c->pps_out)
+						n += sprintf(buf + n, "%s out ", print_count(c->pps_out));
+				}
+			}
+	
+		if (n)
+			logg(LOG_INFO,"pps: %s\n", buf);
+	}
 }
 
 void start_calculate_pps(void)
@@ -808,6 +829,9 @@ static void channel_init(void)
 	register_enable("loopbackprev", false, &loopback_blocking, NULL, "on", "off", NULL,
 		"Multicast loopback prevention of the NIC");
 
+	register_enable("ppsdisplay", false, &pps_display, NULL, "on", "off", NULL,
+		"Display pps in and out of interfaces");
+
 #ifdef UNICAST
 	register_enable("flow", false, &flow_steering, NULL, "on", "off", NULL,
 		"Enable flow steering to limit the traffic on the RAW sockets [Experimental, Broken]");
Index: rdma-core/ib2roce/sched.c
===================================================================
--- rdma-core.orig/ib2roce/sched.c
+++ rdma-core/ib2roce/sched.c
@@ -158,6 +158,22 @@ char *print_time(uint64_t time)
 	return buf;
 }
 
+char *print_count(uint64_t count)
+{
+	static char buf[20];
+
+	if (count > 10L * 1024*1024*1024)
+		sprintf(buf, "%ldg", (count + 512*1024*1024) / (1024*1024*1024));
+	else if (count > 10L * 1024*1024)
+		sprintf(buf, "%ldm", (count + 512*1024) / (1024*1024));
+	else if (count > 10L * 1024)
+		sprintf(buf, "%ldk", (count + 512)/ 1024);
+	else
+		sprintf(buf, "%ld", count);
+
+	return buf;
+}
+
 int get_timer_list(char *buf, char separator)
 {
 	int n = 0;
Index: rdma-core/ib2roce/sched.h
===================================================================
--- rdma-core.orig/ib2roce/sched.h
+++ rdma-core/ib2roce/sched.h
@@ -125,6 +125,8 @@ void terminate(int x);
 int get_timer_list(char *b, char separator);
 
 char *print_time(uint64_t);
+char *print_count(uint64_t count);
+
 void start_cores(void);
 void stop_cores(void);
 
