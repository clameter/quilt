Index: rdma-core/ib2roce/ib2roce.c
===================================================================
--- rdma-core.orig/ib2roce/ib2roce.c
+++ rdma-core/ib2roce/ib2roce.c
@@ -893,21 +893,23 @@ static struct buf *buffers;
 
 static struct buf *nextbuffer;	/* Pointer to next available RDMA buffer */
 
-static void __free_buffer(struct buf *buf)
+static void free_buffer(struct buf *buf)
 {
 #ifdef DEBUG
 	memset(buf->raw, 0, DATA_SIZE);
 #endif
 	buf->free = true;
-	buf->next = nextbuffer;
-	nextbuffer = buf;
-}
 
-static void free_buffer(struct buf *buf)
-{
-	lock();
-	__free_buffer(buf);
-	unlock();
+	if (multithreaded) {
+		do {
+			buf->next = nextbuffer;
+
+		} while (!atomic_compare_exchange_weak(&nextbuffer, &buf->next, buf));
+
+	} else {
+		buf->next = nextbuffer;
+		nextbuffer = buf;
+	}
 }
 
 static void get_buf(struct buf *buf)
@@ -986,17 +988,24 @@ static void init_buf(void)
 
 static struct buf *alloc_buffer(struct rdma_channel *c)
 {
-	struct buf *buf;
+	struct buf *buf, *next;
 
-	lock();
-	buf = nextbuffer;
+	if (multithreaded) {
+		do {
+			buf = nextbuffer;
+			if (!buf)
+				return NULL;
 
-	if (buf) {
+			next = buf->next;
+		} while (!atomic_compare_exchange_weak(&nextbuffer, &buf, next));
+
+	} else {
+		buf = nextbuffer;
 		nextbuffer = buf->next;
-		buf->free = false;
 	}
+
+	buf->free = false;
 	buf->c = c;
-	unlock();
 
 #ifdef DEBUG
 	buf->next = NULL;
