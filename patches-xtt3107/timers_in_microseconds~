Index: rdma-core/ib2roce/ib2roce.c
===================================================================
--- rdma-core.orig/ib2roce/ib2roce.c
+++ rdma-core/ib2roce/ib2roce.c
@@ -114,15 +114,18 @@ static int rate = 0;			/* Limit sending
 static int swrate = 0;			/* Software delay per message */
 
 
-/* Timestamp in milliseconds */
+/* Timestamp in microseconds */
 static unsigned long timestamp(void)
 {
 	struct timespec t;
 
 	clock_gettime(CLOCK_REALTIME, &t);
-	return t.tv_sec * 1000 + (t.tv_nsec + 500000) / 1000000;
+	return t.tv_sec * 1000 + (t.tv_nsec + 500) / 1000;
 }
 
+#define seconds(x) ((x)*1000000)
+#define miliseconds(x) ((x)*1000)
+
 #define cpu_relax()	asm volatile("rep; nop")
 
 __attribute__ ((format (printf, 2, 3)))
@@ -4778,7 +4781,7 @@ static void status_write(void)
 		close(fd);
 		update_requested = false;
 	}
-	add_event(timestamp() + 60000, status_write);
+	add_event(timestamp() + seconds(60), status_write);
 }
 
 #define BEACON_MCS 500
@@ -4959,7 +4962,7 @@ static void beacon_send(void)
 		send_buf_to(i, buf, beacon_sin);
 
 	}
-	add_event(timestamp() + 10000, beacon_send);
+	add_event(timestamp() + seconds(10), beacon_send);
 }
 
 static void beacon_setup(const char *opt_arg)
@@ -4992,7 +4995,7 @@ static void beacon_setup(const char *opt
 		} else
 			beacon_mc = m;
 	}
-	add_event(timestamp() + 1000, beacon_send);
+	add_event(timestamp() + seconds(1), beacon_send);
 }
 
 /* Events are timed according to milliseconds in the current epoch */
@@ -5032,7 +5035,7 @@ static void check_joins(void)
 	/* Maintenance tasks */
 	if (nr_mc > active_mc) {
 		join_processing();
-		add_event(timestamp() + 1000, check_joins);
+		add_event(timestamp() + seconds(1), check_joins);
 	} else {
 		/*
 		 * All active so start listening. This means we no longer
@@ -5061,7 +5064,7 @@ static void logging(void)
 	const char *events;
 
 	for(struct timed_event *z = next_event; z; z = z->next)
-		n += sprintf(buf + n, "%ldms,", z->time - timestamp());
+		n += sprintf(buf + n, "%ldms,", (z->time - timestamp()) / 1000);
 
 	if (n > 0)
 		buf[n -1] = 0;
@@ -5070,7 +5073,7 @@ static void logging(void)
 
 	if (n == 0) {
 		events = "No upcoming events";
-		interval = 10000;
+		interval = seconds(10);
 	} else {
 		snprintf(buf2, sizeof(buf2), "Events in %s", buf);
 		events = buf2;
