Index: rdma-core/ib2roce/ib2roce.c
===================================================================
--- rdma-core.orig/ib2roce/ib2roce.c
+++ rdma-core/ib2roce/ib2roce.c
@@ -1184,6 +1184,7 @@ err:
 }
 
 static void process_cqes(struct rdma_channel *c, struct ibv_wc *w, unsigned cqs);
+static void arm_channels(struct core_info *core);
 
 /*
  * Polling function for each core enabling low latency operations.
@@ -1440,12 +1441,16 @@ static void post_receive(struct rdma_cha
 	}
 }
 
-static void post_receive_buffers(struct i2r_interface *i)
+static void post_receive_buffers(void)
 {
-	post_receive(i->multicast);
-	post_receive(i->raw);
-	post_receive(i->qp1);
-	post_receive(i->ud);
+	struct i2r_interface *i;
+
+	for(i = i2r; i < i2r + NR_INTERFACES; i++) {
+		post_receive(i->multicast);
+		post_receive(i->raw);
+		post_receive(i->qp1);
+		post_receive(i->ud);
+	}
 }
 
 
@@ -1753,12 +1758,11 @@ static bool setup_channel(struct rdma_ch
 	struct ibv_qp_init_attr_ex init_qp_attr_ex;
 
 	c->mr = i->mr;
+	c->pd = i->pd;
 
 	if (!c->core)
 		c->comp_events = i->comp_events;
 
-	c->pd = i->pd;
-
 	c->cq = ibv_create_cq(i->context, c->nr_cq, c, c->comp_events, 0);
 	if (!c->cq) {
 		logg(LOG_CRIT, "ibv_create_cq failed for %s.\n",
@@ -4575,32 +4579,32 @@ static void setup_timed_events(void)
 	add_event(t + 100, check_joins);
 }
 
-static void arm_channels(void)
+static void arm_channels(struct core_info *core)
 {
 	struct i2r_interface *i;
 
 	for(i = i2r; i < i2r + NR_INTERFACES; i++)
 	   if (i->context) {
-		/* Receive Buffers */
-		post_receive_buffers(i);
+
 		/* And request notifications if something happens */
-		if (i->multicast) {
+		if (i->multicast && core == i->multicast->core) {
 			ibv_req_notify_cq(i->multicast->cq, 0);
 		}
 
-		if (i->raw && (i->raw->type == channel_raw || i->raw->type == channel_ibraw)) {
+		if (i->raw && core == i->raw->core &&
+			       (i->raw->type == channel_raw || i->raw->type == channel_ibraw)) {
 			start_channel(i->raw);
 			ibv_req_notify_cq(i->raw->cq, 0);
 
 			setup_flow(i->raw);
 		}
 
-		if (i->ud) {
+		if (i->ud && core == i->ud->core) {
 			start_channel(i->ud);
 			ibv_req_notify_cq(i->ud->cq, 0);
 		}
 
-		if (i->qp1) {
+		if (i->qp1 && core == i->qp1->core) {
 			start_channel(i->qp1);
 			ibv_req_notify_cq(i->qp1->cq, 0);
 		}
@@ -4616,8 +4620,6 @@ static int event_loop(void)
 	int waitms;
 	unsigned long t;
 
-	arm_channels();
-	setup_timed_events();
 loop:
 	timeout = 10000;
 
@@ -5078,8 +5080,6 @@ int main(int argc, char **argv)
 		exec_opt(op, optarg);
 	}
 
-	init_buf();
-
 	if (debug || !bridging)
 		openlog("ib2roce", LOG_PERROR, LOG_USER);
 	else {
@@ -5116,11 +5116,16 @@ int main(int argc, char **argv)
 		beacon_setup(beacon_arg);
 
 	register_poll_events();
+	setup_timed_events();
 
-	start_cores();
+	numa_run_on_node(i2r[INFINIBAND].context ? i2r[INFINIBAND].numa_node : i2r[ROCE].numa_node);
+	init_buf();
+	numa_run_on_node(-1);
 
+	post_receive_buffers();
+	start_cores();
+	arm_channels(NULL);
 	event_loop();
-
 	stop_cores();
 
 	if (background)
