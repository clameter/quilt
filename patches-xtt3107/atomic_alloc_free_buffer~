Index: rdma-core/ib2roce/ib2roce.c
===================================================================
--- rdma-core.orig/ib2roce/ib2roce.c
+++ rdma-core/ib2roce/ib2roce.c
@@ -920,7 +920,46 @@ static struct buf *buffers;
 
 static struct buf *nextbuffer;	/* Pointer to next available RDMA buffer */
 
-static void __free_buffer(struct buf *buf)
+static bool buf_cmpxchg(struct buf **x, struct buf *y, struct buf *z)
+{
+	if (multithreaded) {
+		return atomic_compare_exchange_weak(x, &y, z);
+
+	} else {
+		if (*x == y) {
+			*x = z;
+			return true;
+		}
+		return false;
+	}
+}
+
+static struct buf *alloc_buffer(struct rdma_channel *c)
+{
+	struct buf *buf, *next;
+
+	do {
+		buf = nextbuffer;
+		if (!buf)
+			return NULL;
+
+		next = buf->next;
+	} while (!buf_cmpxchg(&nextbuffer, buf, next));
+
+	buf->free = false;
+	buf->c = c;
+
+#ifdef DEBUG
+	buf->next = NULL;
+
+	for(uint8_t *q = buf->raw; q < buf->raw + DATA_SIZE; q++)
+		if (*q)
+			abort();
+#endif
+	return buf;
+}
+ 
+static void free_buffer(struct buf *buf)
 {
 #ifdef DEBUG
 	memset(buf->raw, 0, DATA_SIZE);
@@ -929,18 +968,13 @@ static void __free_buffer(struct buf *bu
 		abort();
 
 	buf->free = true;
-	buf->next = nextbuffer;
-	nextbuffer = buf;
-}
-
-static void free_buffer(struct buf *buf)
-{
-	lock();
-	__free_buffer(buf);
-	unlock();
-}
 
+	do {
+		buf->next = nextbuffer;
 
+	} while (!buf_cmpxchg(&nextbuffer, buf->next, buf));
+}
+ 
 static void __get_buf(struct buf *buf)
 {
 	if (!buf->refcount)
@@ -1039,32 +1073,6 @@ static void init_buf(void)
 		free_buffer(&buffers[i-1]);
 }
 
-static struct buf *alloc_buffer(struct rdma_channel *c)
-{
-	struct buf *buf;
-
-	lock();
-	buf = nextbuffer;
-
-	if (buf) {
-		if (!buf->free)
-			abort();
-		nextbuffer = buf->next;
-		buf->free = false;
-		buf->c = c;
-	}
-	unlock();
-
-#ifdef DEBUG
-	buf->next = NULL;
-
-	for(uint8_t *q = buf->raw; q < buf->raw + DATA_SIZE; q++)
-		if (*q)
-			abort();
-#endif
-	return buf;
-}
-
 typedef bool setup_callback(struct rdma_channel *c);
 static receive_callback receive_main, receive_multicast, receive_raw, receive_ud, receive_qp1;
 static setup_callback setup_multicast, setup_channel, setup_raw, setup_packet, setup_incoming;
