Index: rdma-core/ib2roce/sender.c
===================================================================
--- rdma-core.orig/ib2roce/sender.c
+++ rdma-core/ib2roce/sender.c
@@ -46,6 +46,7 @@ static unsigned sendbatch = 1;
 static unsigned sendlen = 1024;
 
 static uint64_t sender_interval;
+static uint64_t send_time;
 static unsigned sender_seq = 1;
 
 static unsigned sessionid;
@@ -94,8 +95,6 @@ static void sender_send(void *private)
 
 	for(int j = 0; j < sendbatch; j++) {
 
-		now = timestamp();
-
 		/* scan through all multicast groups and send */
 		mc_foreach(m) {
 			struct rdma_channel *c = m->interface[default_interface].channel;
@@ -103,14 +102,19 @@ static void sender_send(void *private)
 			if (m->interface[default_interface].status != MC_JOINED)
 				continue;
 
+			/* No point in sending if we already have a backlog */
+			if (!fifo_empty(&c->send_queue))
+				continue;
+
 			buf = alloc_buffer(c);
 			prep_sender_struct(i, buf);
 			send_to(c, buf->raw, buf->end - buf->raw, &m->interface[default_interface].ai, false, 0, buf);
+			sender_seq++;
 		}
-		sender_seq++;
 	}
 
-	add_event(timestamp() + sender_interval, sender_send, NULL, "Sender Send");
+	send_time += sender_interval;
+	add_event(send_time, sender_send, NULL, "Sender Send");
 }
 
 void sender_shutdown(void)
@@ -123,7 +127,7 @@ void sender_shutdown(void)
 
 void sender_setup(void)
 {
-	if (sendrate > 1000 || !sendrate) {
+	if (sendrate > 10000 || !sendrate) {
 		logg(LOG_ERR, "Cannot send more than 1000 batches per second\n");
 		return;
 	}
@@ -133,8 +137,9 @@ void sender_setup(void)
 	if (!sender_interval)
 		return;
 
-	add_event(timestamp() + ONE_SECOND + rand() % sender_interval,
-			sender_send, NULL, "Sender Send");
+	send_time = timestamp() + ONE_SECOND + rand() % sender_interval;
+
+	add_event(send_time, sender_send, NULL, "Sender Send");
 }
 
 __attribute__((constructor))
