Index: rdma-core/ib2roce/ib2roce.c
===================================================================
--- rdma-core.orig/ib2roce/ib2roce.c
+++ rdma-core/ib2roce/ib2roce.c
@@ -50,6 +50,7 @@
 #include <ctype.h>
 #include <pthread.h>
 #include <numa.h>
+#include <stdatomic.h>
 
 #include <arpa/inet.h>
 #include <sys/socket.h>
@@ -925,6 +926,9 @@ static void __free_buffer(struct buf *bu
 #ifdef DEBUG
 	memset(buf->raw, 0, DATA_SIZE);
 #endif
+	if (buf->free)
+		abort();
+
 	buf->free = true;
 	buf->next = nextbuffer;
 	nextbuffer = buf;
@@ -954,11 +958,9 @@ static void get_buf(struct buf *buf)
 
 static void put_buf(struct buf *buf)
 {
-	unsigned count;
-
 	lock();
-	count = --buf->refcount;
-	if (count) {
+	buf->refcount--;
+	if (buf->refcount) {
 		unlock();
 		return;
 	}
@@ -1028,10 +1030,12 @@ static struct buf *alloc_buffer(struct r
 	buf = nextbuffer;
 
 	if (buf) {
+		if (!buf->free)
+			abort();
 		nextbuffer = buf->next;
 		buf->free = false;
+		buf->c = c;
 	}
-	buf->c = c;
 	unlock();
 
 #ifdef DEBUG
@@ -2280,7 +2284,6 @@ static void handle_rdma_event(void *priv
 					m->status[in] = MC_ERROR;
 					break;
 				}
-				m->status[in] = MC_JOINED;
 
 				/* Things actually work if both multicast groups are joined */
 				if (!bridging || m->status[in ^ 1] == MC_JOINED)
@@ -2292,6 +2295,7 @@ static void handle_rdma_event(void *priv
 					param->ah_attr.sl,
 					i->text);
 				st(i->multicast, join_success);
+				m->status[in] = MC_JOINED;
 			}
 			break;
 
@@ -2568,9 +2572,13 @@ static int send_to(struct rdma_channel *
 	struct ibv_sge sge;
 	int ret;
 
-	if (!ai->ah)
-		abort();	/* Send without a route */
 
+	if (!ai->ah) {
+		logg(LOG_WARNING, "send_to: %s AH == NULL\n", c->text);
+		return EIO;
+	}
+
+	get_buf(buf);
 	buf->c = c;	/* Change ownership to sending channel */
 	buf->w = NULL;
 
@@ -3573,8 +3581,14 @@ static void receive_multicast(struct buf
 	int ret;
 	struct pgm_header pgm;
 
+	if (!buf->refcount)
+		abort();
+
 	learn_source_address(buf);
 
+	if (!buf->refcount)
+		abort();
+
 	if (!buf->grh_valid) {
 		logg(LOG_WARNING, "No GRH on %s. Packet discarded: %s\n",
 			c->text, payload_dump(buf->cur));
@@ -3659,11 +3673,19 @@ static void receive_multicast(struct buf
 		}
 	}
 
+	if (m->status[INFINIBAND] != MC_JOINED || m->status[ROCE] != MC_JOINED) {
+		logg(LOG_NOTICE, "%s: Packet received on %s but MC Joins not completed\n", c->text, m->text);
+		return;
+	}
+
 	if (m->beacon) {
 		beacon_received(buf);
 		return;
 	}
 
+	if (!buf->refcount)
+		abort();
+
 	if (pgm_mode != pgm_none) {
 		if (!pgm_process(c, m, buf))
 			return;
