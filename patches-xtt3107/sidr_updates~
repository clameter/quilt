Index: rdma-core/ib2roce/ib2roce.c
===================================================================
--- rdma-core.orig/ib2roce/ib2roce.c
+++ rdma-core/ib2roce/ib2roce.c
@@ -3448,6 +3448,8 @@ static const char *sidr_req(struct buf *
 	struct in_addr dest;
 	struct in_addr source;
 	const char *reason = NULL;
+	char y[40];
+	struct in_addr x;
 
 	if (ch->cma_version != CMA_VERSION) {
 		reason = "SIDR REQ: Unsupported CMA version";
@@ -3459,11 +3461,15 @@ static const char *sidr_req(struct buf *
 		goto no_cma;
 	}
 
+	x.s_addr = ch->src_addr.ip4.addr;
+	strcpy(y, inet_ntoa(x));
+	x.s_addr = ch->dst_addr.ip4.addr;
+
 	ss->source = buf->source_ep;
 	ss->source_qp = ntohl(ch->src_addr.ip4.qpn);
-	logg(LOG_NOTICE, "SDIR_REQ CMA info = SRC QP=%x QKEY=%d DST QP=%x QKEY=%x\n",
-		ntohl(ch->src_addr.ip4.qpn), ntohl(ch->src_addr.ip4.qkey),
-		ntohl(ch->dst_addr.ip4.qpn), ntohl(ch->dst_addr.ip4.qkey));
+	logg(LOG_NOTICE, "SDIR_REQ CMA info = SRC IP=%s QP=%x QKEY=%d DST IP=%s QP=%x QKEY=%x\n",
+		y, ntohl(ch->src_addr.ip4.qpn), ntohl(ch->src_addr.ip4.qkey),
+		inet_ntoa(x), ntohl(ch->dst_addr.ip4.qpn), ntohl(ch->dst_addr.ip4.qkey));
 	ss->request_id = sr->request_id;
 
 no_cma:
