Index: rdma-core/ib2roce/channel.c
===================================================================
--- rdma-core.orig/ib2roce/channel.c
+++ rdma-core/ib2roce/channel.c
@@ -121,7 +121,7 @@ void show_core_config(void)
 	}
 }
 
-struct rdma_channel *new_rdma_channel(struct i2r_interface *i, enum channel_type type)
+struct rdma_channel *new_rdma_channel(struct i2r_interface *i, enum channel_type type, const char *user_suffix)
 {
 	struct rdma_channel *c;
 	struct channel_info *ci;
@@ -157,10 +157,14 @@ retry:
 	c->type = type;
 	c->receive = ci->receive;
 
-	p = malloc(strlen(i->text) + strlen(ci->suffix) + 2);
+	p = malloc(strlen(i->text) + strlen(ci->suffix) + 2 + (user_suffix ? 1 + strlen(user_suffix) : 0));
 	strcpy(p, i->text);
 	strcat(p, "-");
 	strcat(p, ci->suffix);
+	if (user_suffix) {
+		strcat(p, "-");
+		strcat(p, user_suffix);
+	}
 	c->text = p;
 
 	c->nr_cq = ci->nr_cq;
Index: rdma-core/ib2roce/endpoint.c
===================================================================
--- rdma-core.orig/ib2roce/endpoint.c
+++ rdma-core/ib2roce/endpoint.c
@@ -546,7 +546,7 @@ static void resolve_start(struct rdma_un
 		sin->sin_family = AF_INET;
 		sin->sin_addr = i->if_addr.sin_addr;
 		sin->sin_port = 0;
-		ru->c = new_rdma_channel(i, channel_incoming);
+		ru->c = new_rdma_channel(i, channel_incoming, "in");
 		ru->c->ru = ru;
 	}
 
Index: rdma-core/ib2roce/interfaces.c
===================================================================
--- rdma-core.orig/ib2roce/interfaces.c
+++ rdma-core/ib2roce/interfaces.c
@@ -500,25 +500,25 @@ void setup_interface(enum interfaces in)
 	if (!i->mr)
 		panic("ibv_reg_mr failed for %s:%s.\n", i->text, errname());
 
-	i->multicast = new_rdma_channel(i, channel_rdmacm);
+	i->multicast = new_rdma_channel(i, channel_rdmacm, NULL);
 
 	if (!i->multicast)
 		abort();
 
 	if (unicast) {
 
-		i->ud = new_rdma_channel(i, channel_ud);
-		i->qp1 = new_rdma_channel(i, channel_qp1);
+		i->ud = new_rdma_channel(i, channel_ud, NULL);
+		i->qp1 = new_rdma_channel(i, channel_qp1, NULL);
 
 		if (raw) {
 			if (i == i2r + INFINIBAND) {
-				i->raw = new_rdma_channel(i, channel_ibraw);
+				i->raw = new_rdma_channel(i, channel_ibraw, NULL);
 				/* Sadly fallback is not working here */
 			} else {
 				if (packet_socket)
-					i->raw = new_rdma_channel(i, channel_packet);
+					i->raw = new_rdma_channel(i, channel_packet, NULL);
 				else
-					i->raw = new_rdma_channel(i, channel_raw);
+					i->raw = new_rdma_channel(i, channel_raw, NULL);
 			}
 		}
 	}
Index: rdma-core/ib2roce/beacon.c
===================================================================
--- rdma-core.orig/ib2roce/beacon.c
+++ rdma-core/ib2roce/beacon.c
@@ -136,7 +136,7 @@ static void enable_bridge(struct bridge_
 
 	/* Create new MC channels */
 	for (i = 0; i < NR_INTERFACES; i++) {
-		b->channel[i] = new_rdma_channel(i2r + i, channel_rdmacm);
+		b->channel[i] = new_rdma_channel(i2r + i, channel_rdmacm, "beacon");
 	}
 
 
Index: rdma-core/ib2roce/channel.h
===================================================================
--- rdma-core.orig/ib2roce/channel.h
+++ rdma-core/ib2roce/channel.h
@@ -150,7 +150,7 @@ void channel_stat(FILE *out, struct rdma
 void start_channel(struct rdma_channel *c);
 void stop_channel(struct rdma_channel *c);
 
-struct rdma_channel *new_rdma_channel(struct i2r_interface *i, enum channel_type type);
+struct rdma_channel *new_rdma_channel(struct i2r_interface *i, enum channel_type type, const char *suffix);
 
 void arm_channels(struct core_info *core);
 void arm_channel(struct rdma_channel *);
